input {
    file {
        path => "/home/max/dev/elk/logstash-7.12.1/event_data/apache_access.log"
        start_position => "beginning"
        type => "access"
    }

    http {
        type => "access"
    }
}

filter {
    if [headers][request_uri] =~ "error" or [path] =~ "errors" {
        mutate {
            replace => { "type" => "error" }
        }
    } else {
        mutate {
            replace => { "type" => "error" }
        }

        grok {
            match => { "message" => "%{HTTPD_COMBINEDLOG}" }
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }

        mutate {
            gsub => [
                "agent", '"', "",
                "referrer", '"', ""
            ]

            convert => {
                "response" => "integer"
                "bytes" => "integer"
            }
        }

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            remove_field => [ "timestamp" ]
        }
    }
}
output
{
    stdout {
        codec => rubydebug
    }

    if "_dateparsefailure" in [tags] {
        file {
            path => "error_%{+yyyy_MM_dd}.log"
        }
    } else {
        file {
            path => "%{type}_%{+yyyy_MM_dd}.log"
        }
    }
}